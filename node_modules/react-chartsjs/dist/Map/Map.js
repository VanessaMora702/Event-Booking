var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}import MapGL,{Marker}from'react-map-gl';import React,{Component}from'react';import WebMercatorViewport from'viewport-mercator-project';import Tooltip from'../Tooltip/Tooltip';import{styles}from'./styles';import{propTypes,defaultProps}from'./defaultValues';var guid=function(){var a=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)};return''+a()+a()+'-'+a()},Map=function(a){function b(a){_classCallCheck(this,b);var c=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,a));return c.state={viewport:{width:a.width,height:a.height,latitude:a.latitude,longitude:a.longitude,zoom:a.zoom,maxZoom:a.maxZoom}},c.changeBoudingBox=c.changeBoudingBox.bind(c),c.onViewportChange=c.onViewportChange.bind(c),c.renderButtonIcon=c.renderButtonIcon.bind(c),c.onClickGroup=c.onClickGroup.bind(c),c.onClickPoint=c.onClickPoint.bind(c),c.getMapBounds=c.getMapBounds.bind(c),c}return _inherits(b,a),_createClass(b,[{key:'componentDidMount',value:function componentDidMount(){var a=this.props.initialBound;a&&this.changeBoudingBox(a)}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(a){if(a.boundingBox){var b=a.boundingBox;this.changeBoudingBox(b)}}},{key:'onViewportChange',value:function onViewportChange(a){var b=Object.assign({},a);this.props.onViewportChange(Object.assign({},b,{bounding_box:this.getMapBounds()})),this.setState({viewport:b})}},{key:'onClickGroup',value:function onClickGroup(a){var b=this.props.positionName,c=this.state.viewport.zoom+1;c>this.props.maxZoom&&(c=this.props.maxZoom),this.props.onClickGroup({bounding_box:this.getMapBounds(),zoom:c,data:a}),this.setState({viewport:Object.assign({},this.state.viewport,{zoom:c,latitude:a[b][0],longitude:a[b][1]})})}},{key:'onClickPoint',value:function onClickPoint(a){this.props.onClickPoint({bounding_box:this.getMapBounds(),zoom:this.state.viewport.zoom,data:a})}},{key:'getMapBounds',value:function getMapBounds(){var a=this.mapRef.getMap(),b=a.getBounds(),c={top_left:{lat:b._ne.lat,lon:b._sw.lng},bottom_right:{lat:b._sw.lat,lon:b._ne.lng}};return c}},{key:'changeBoudingBox',value:function changeBoudingBox(a){var b=new WebMercatorViewport(this.state.viewport).fitBounds(a),c=b.longitude,d=b.latitude,e=b.zoom;this.setState({viewport:Object.assign({},this.state.viewport,{latitude:d,longitude:c,zoom:e})})}},{key:'renderButtonIcon',value:function renderButtonIcon(a,b,c){var d=this.props,e=d.colors,f=d.keyName,g=d.valueName,h=d.tooltip,i=d.defaultColor,j=this.props.colorFind(e,a,f,i);return React.createElement('div',Object.assign({},styles(),{role:'button',tabIndex:0,onKeyPress:function onKeyPress(){b(a)},onClick:function onClick(){b(a)}}),React.createElement(Tooltip,{isEnabled:this.props.enableTooltip},h(a)),c(j.color,Object.assign({},a,{value:a[g]}),this.props.textStyles))}},{key:'renderMarkers',value:function renderMarkers(){var a=this,b=this.props,c=b.valueName,d=b.positionName,e=this.props.data.map(function(b){var e=1<b[c]?a.renderButtonIcon(b,a.onClickGroup,a.props.groupIcon):a.renderButtonIcon(b,a.onClickPoint,a.props.singleIcon);return React.createElement(Marker,{latitude:b[d][0],longitude:b[d][1],offsetLeft:-20,offsetTop:-10,key:guid(),captureClick:!0},e)});return e}},{key:'render',value:function render(){var a=this;return React.createElement(MapGL,Object.assign({},this.state.viewport,{ref:function ref(b){a.mapRef=b},mapboxApiAccessToken:this.props.token,onViewportChange:this.onViewportChange,mapStyle:this.props.mapStyle}),this.renderMarkers())}}]),b}(Component);Map.propTypes=propTypes,Map.defaultProps=defaultProps;export default Map;