var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}import React from'react';import invariant from'invariant';import d3WordCloud from'./classD3';import Tooltip from'../Tooltip/Tooltip';import{propTypes,defaultProps}from'./defaultValues';var WordCloud=function(a){function b(){var a,c,d,e;_classCallCheck(this,b);for(var f=arguments.length,g=Array(f),h=0;h<f;h++)g[h]=arguments[h];return e=(c=(d=_possibleConstructorReturn(this,(a=b.__proto__||Object.getPrototypeOf(b)).call.apply(a,[this].concat(g))),d),d.container=React.createRef(),d.chart=React.createRef(),d.state={tooltipContent:'',enableTooltip:d.props.enableTooltip,tooltipX:0,tooltipY:0},d.tooltipState=function(a){d.setState(a)},d.validateProps=function(){var a=Math.abs,b=d.props,c=b.maxAngle,e=b.minAngle,f=b.words,g=b.wordCountKey,h=b.wordKey;if(invariant(90>=a(e)&&90>=a(c),'Angles must have values between -90 to 90 degrees'),invariant(e<=c,'minAngle must be <= maxAngle'),0<f.length)f[0]},c),_possibleConstructorReturn(d,e)}return _inherits(b,a),_createClass(b,[{key:'componentDidMount',value:function componentDidMount(){this.validateProps(),d3WordCloud.create(this.props,Object.assign({},{chart:this.chart.current,container:this.container.current,tooltipState:this.tooltipState}))}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(a){d3WordCloud.update(a,Object.assign({},{chart:this.chart.current,container:this.container.current,tooltipState:this.tooltipState}))}},{key:'componentWillUnmount',value:function componentWillUnmount(){d3WordCloud.destroy(this.chart.current)}},{key:'render',value:function render(){var a=this.state,b=a.tooltipContent,c=a.enableTooltip,d=a.tooltipX,e=a.tooltipY;return React.createElement('div',{ref:this.container},React.createElement('div',{ref:this.chart}),React.createElement(Tooltip,{x:d,y:e,isEnabled:c},React.createElement('h1',null,b)))}}]),b}(React.Component);WordCloud.propTypes=propTypes,WordCloud.defaultProps=defaultProps;export default WordCloud;