function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import{Vector3}from"math.gl";import{createMat4,transformVector}from"./math-utils";import mat4_perspective from"gl-mat4/perspective";import mat4_scale from"gl-mat4/scale";import mat4_translate from"gl-mat4/translate";import mat4_rotateX from"gl-mat4/rotateX";import mat4_rotateZ from"gl-mat4/rotateZ";import vec2_lerp from"gl-vec2/lerp";import assert from"./assert";var PI=Math.PI,PI_4=PI/4,DEGREES_TO_RADIANS=PI/180,RADIANS_TO_DEGREES=180/PI,TILE_SIZE=512,EARTH_CIRCUMFERENCE=4003e4,DEFAULT_ALTITUDE=1.5;export function zoomToScale(zoom){return Math.pow(2,zoom)}export function scaleToZoom(scale){return Math.log2(scale)}export function lngLatToWorld(_ref,scale){var _ref2=_slicedToArray(_ref,2),lng=_ref2[0],lat=_ref2[1];scale*=TILE_SIZE;var x=scale*(lng*DEGREES_TO_RADIANS+PI)/(2*PI),y=scale*(PI-Math.log(Math.tan(PI_4+.5*(lat*DEGREES_TO_RADIANS))))/(2*PI);return[x,y]}export function worldToLngLat(_ref3,scale){var _ref4=_slicedToArray(_ref3,2),x=_ref4[0],y=_ref4[1];scale*=TILE_SIZE;var lambda2=x/scale*(2*PI)-PI,phi2=2*(Math.atan(Math.exp(PI-y/scale*(2*PI)))-PI_4);return[lambda2*RADIANS_TO_DEGREES,phi2*RADIANS_TO_DEGREES]}export function getMeterZoom(_ref5){var latitude=_ref5.latitude;assert(Number.isFinite(latitude));var latCosine=Math.cos(latitude*DEGREES_TO_RADIANS);return scaleToZoom(EARTH_CIRCUMFERENCE*latCosine)-9}export function getDistanceScales(_ref6){var _NumberisFinite=Number.isFinite,latitude=_ref6.latitude,longitude=_ref6.longitude,zoom=_ref6.zoom,scale=_ref6.scale,_ref6$highPrecision=_ref6.highPrecision;scale=void 0===scale?zoomToScale(zoom):scale,assert(_NumberisFinite(latitude)&&_NumberisFinite(longitude)&&_NumberisFinite(scale));var result={},worldSize=TILE_SIZE*scale,latCosine=Math.cos(latitude*DEGREES_TO_RADIANS),pixelsPerDegreeX=worldSize/360,pixelsPerDegreeY=pixelsPerDegreeX/latCosine,altPixelsPerMeter=worldSize/EARTH_CIRCUMFERENCE/latCosine;if(result.pixelsPerMeter=[altPixelsPerMeter,altPixelsPerMeter,altPixelsPerMeter],result.metersPerPixel=[1/altPixelsPerMeter,1/altPixelsPerMeter,1/altPixelsPerMeter],result.pixelsPerDegree=[pixelsPerDegreeX,pixelsPerDegreeY,altPixelsPerMeter],result.degreesPerPixel=[1/pixelsPerDegreeX,1/pixelsPerDegreeY,1/altPixelsPerMeter],void 0!==_ref6$highPrecision&&_ref6$highPrecision){var latCosine2=DEGREES_TO_RADIANS*Math.tan(latitude*DEGREES_TO_RADIANS)/latCosine,altPixelsPerDegree2=worldSize/EARTH_CIRCUMFERENCE*latCosine2,altPixelsPerMeter2=altPixelsPerDegree2/pixelsPerDegreeY*altPixelsPerMeter;result.pixelsPerDegree2=[0,pixelsPerDegreeX*latCosine2/2,altPixelsPerDegree2],result.pixelsPerMeter2=[altPixelsPerMeter2,0,altPixelsPerMeter2]}return result}export function getWorldPosition(_ref7){var longitude=_ref7.longitude,latitude=_ref7.latitude,zoom=_ref7.zoom,scale=_ref7.scale,meterOffset=_ref7.meterOffset,_ref7$distanceScales=_ref7.distanceScales,distanceScales=void 0===_ref7$distanceScales?null:_ref7$distanceScales;scale=scale===void 0?zoomToScale(zoom):scale;var center2d=lngLatToWorld([longitude,latitude],scale),center=new Vector3(center2d[0],center2d[1],0);if(meterOffset){distanceScales=distanceScales||getDistanceScales({latitude:latitude,longitude:longitude,scale:scale});var pixelPosition=new Vector3(meterOffset).scale(distanceScales.pixelsPerMeter).scale([1,-1,1]);center.add(pixelPosition)}return center}export function getViewMatrix(_ref8){var height=_ref8.height,pitch=_ref8.pitch,bearing=_ref8.bearing,altitude=_ref8.altitude,_ref8$center=_ref8.center,center=void 0===_ref8$center?null:_ref8$center,_ref8$flipY=_ref8.flipY,vm=createMat4();return mat4_translate(vm,vm,[0,0,-altitude]),mat4_scale(vm,vm,[1,1,1/height]),mat4_rotateX(vm,vm,-pitch*DEGREES_TO_RADIANS),mat4_rotateZ(vm,vm,bearing*DEGREES_TO_RADIANS),void 0!==_ref8$flipY&&_ref8$flipY&&mat4_scale(vm,vm,[1,-1,1]),center&&mat4_translate(vm,vm,new Vector3(center).negate()),vm}export function getProjectionParameters(_ref9){var _MathPI=Math.PI,_Mathsin=Math.sin,_Mathatan=Math.atan,width=_ref9.width,height=_ref9.height,_ref9$altitude=_ref9.altitude,altitude=void 0===_ref9$altitude?DEFAULT_ALTITUDE:_ref9$altitude,_ref9$pitch=_ref9.pitch,pitch=void 0===_ref9$pitch?0:_ref9$pitch,_ref9$farZMultiplier=_ref9.farZMultiplier,farZMultiplier=void 0===_ref9$farZMultiplier?1:_ref9$farZMultiplier,pitchRadians=pitch*DEGREES_TO_RADIANS,halfFov=_Mathatan(.5/altitude),topHalfSurfaceDistance=_Mathsin(halfFov)*altitude/_Mathsin(_MathPI/2-pitchRadians-halfFov),farZ=Math.cos(_MathPI/2-pitchRadians)*topHalfSurfaceDistance+altitude;return{fov:2*_Mathatan(height/2/altitude),aspect:width/height,focalDistance:altitude,near:.1,far:farZ*farZMultiplier}}export function getProjectionMatrix(_ref10){var width=_ref10.width,height=_ref10.height,pitch=_ref10.pitch,altitude=_ref10.altitude,_ref10$farZMultiplier=_ref10.farZMultiplier,farZMultiplier=void 0===_ref10$farZMultiplier?10:_ref10$farZMultiplier,_getProjectionParamet=getProjectionParameters({width:width,height:height,altitude:altitude,pitch:pitch,farZMultiplier:farZMultiplier}),fov=_getProjectionParamet.fov,aspect=_getProjectionParamet.aspect,near=_getProjectionParamet.near,far=_getProjectionParamet.far,projectionMatrix=mat4_perspective([],fov,aspect,near,far);return projectionMatrix}export function worldToPixels(xyz,pixelProjectionMatrix){var _NumberisFinite2=Number.isFinite,_xyz=_slicedToArray(xyz,3),x=_xyz[0],y=_xyz[1],_xyz$=_xyz[2],z=void 0===_xyz$?0:_xyz$;return assert(_NumberisFinite2(x)&&_NumberisFinite2(y)&&_NumberisFinite2(z)),transformVector(pixelProjectionMatrix,[x,y,z,1])}export function pixelsToWorld(xyz,pixelUnprojectionMatrix){var _NumberisFinite3=Number.isFinite,targetZ=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,_xyz2=_slicedToArray(xyz,3),x=_xyz2[0],y=_xyz2[1],z=_xyz2[2];if(assert(_NumberisFinite3(x)&&_NumberisFinite3(y)),_NumberisFinite3(z)){var coord=transformVector(pixelUnprojectionMatrix,[x,y,z,1]);return coord}var coord0=transformVector(pixelUnprojectionMatrix,[x,y,0,1]),coord1=transformVector(pixelUnprojectionMatrix,[x,y,1,1]),z0=coord0[2],z1=coord1[2],t=z0===z1?0:((targetZ||0)-z0)/(z1-z0);return vec2_lerp([],coord0,coord1,t)}
//# sourceMappingURL=web-mercator-utils.js.map